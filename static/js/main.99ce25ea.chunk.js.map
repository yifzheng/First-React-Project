{"version":3,"sources":["ContactCard.jsx","Counter.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactCard","props","state","name","mobile","work","email","id","this","Component","Counter","count","setState","alert","float","className","onClick","increment","decrement","reset","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA+BeA,G,wDA1BX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,KAAO,EAAKF,MAAME,KAClBC,OAAS,EAAKH,MAAMG,OACpBC,KAAM,EAAKJ,MAAMI,KACjBC,MAAQ,EAAKL,MAAMK,OANT,E,qDAUd,OACI,sBAAKC,GAAK,UAAV,UACI,qBAAIA,GAAK,eAAT,2BAAsC,uBAAUC,KAAKN,MAAMC,QAC3D,qBAAII,GAAK,SAAT,4BAAiC,uBAAUC,KAAKN,MAAME,UACtD,qBAAIG,GAAK,OAAT,0BAA6B,uBAAUC,KAAKN,MAAMG,QAClD,qBAAIE,GAAK,QAAT,oBAAwB,uBAAUC,KAAKN,MAAMI,gB,GAhBnCG,cCuCXC,G,wDAtCX,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTS,MAAO,GAHI,E,wDAOfH,KAAKI,SAAS,CACVD,MAAOH,KAAKN,MAAMS,MAAQ,M,kCAIL,IAArBH,KAAKN,MAAMS,MACXH,KAAKI,SAAS,CACVD,MAAOH,KAAKN,MAAMS,MAAQ,IAI9BE,MAAM,8B,8BAIVL,KAAKI,SAAS,CACVD,MAAO,M,+BAGL,IAAD,OACL,OACI,sBAAKJ,GAAG,UAAR,UACI,qBAAIO,OAAK,EAAT,4BAA0BN,KAAKN,MAAMS,SACrC,wBAAQI,UAAU,YAAYC,QAAS,kBAAM,EAAKC,aAAlD,uBACA,wBAAQF,UAAU,YAAYC,QAAS,kBAAM,EAAKE,aAAlD,uBACA,wBAAQH,UAAU,QAAQC,QAAS,kBAAM,EAAKG,SAA9C,0B,GAjCMV,cCyCPW,MA1Cf,WACC,OACC,gCACC,sBAAKb,GAAG,QAAR,UACC,cAAC,EAAD,CACCJ,KAAK,QACLC,OAAQ,UACRE,MAAM,wBAEP,cAAC,EAAD,CACCH,KAAK,MACLC,OAAQ,UACRE,MAAM,sBAEP,cAAC,EAAD,CACCH,KAAK,OACLC,OAAQ,UACRE,MAAM,uBAEP,cAAC,EAAD,CACCH,KAAK,QACLC,OAAQ,UACRE,MAAM,wBAEP,cAAC,EAAD,CACCH,KAAK,OACLC,OAAQ,UACRE,MAAM,uBAEP,cAAC,EAAD,CACCH,KAAK,OACLC,OAAQ,UACRE,MAAM,0BAGR,qBAAKC,GAAG,QAAR,SACC,cAAC,EAAD,UC3BWc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.99ce25ea.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./ContactCard.css\";\r\n\r\nclass ContactCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name : this.props.name,\r\n            mobile : this.props.mobile,\r\n            work: this.props.work,\r\n            email : this.props.email\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div id = \"content\">\r\n                <h2 id = \"contact-name\">Contact-Name: <br></br>{this.state.name}</h2>\r\n                <h2 id = \"mobile\">Mobile-Number: <br></br>{this.state.mobile}</h2>\r\n                <h2 id = \"work\">Work-Number: <br></br>{this.state.work}</h2>\r\n                <h2 id = \"email\">Email: <br></br>{this.state.email}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nContactCard.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    mobile: PropTypes.number.isRequired,\r\n    work: PropTypes.number,\r\n    email: PropTypes.string.isRequired\r\n}\r\nexport default ContactCard;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Counter.css\";\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 0\r\n        };\r\n    }\r\n    increment() {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    };\r\n    decrement() {\r\n        if (this.state.count !== 0){\r\n            this.setState({\r\n                count: this.state.count - 1\r\n            });\r\n        }\r\n        else{\r\n            alert(\"Cannot be less than zero\");\r\n        }\r\n    };\r\n    reset() {\r\n        this.setState({\r\n            count: 0\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div id=\"counter\">\r\n                <h1 float>Current Count: {this.state.count}</h1>\r\n                <button className='increment' onClick={() => this.increment()}>Increment</button>\r\n                <button className='decrement' onClick={() => this.decrement()}>Decrement</button>\r\n                <button className='reset' onClick={() => this.reset()}>Reset</button>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Counter;","import ContactCard from \"./ContactCard\";\nimport Counter from \"./Counter\";\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<div id=\"cards\">\n\t\t\t\t<ContactCard\n\t\t\t\t\tname=\"Nancy\"\n\t\t\t\t\tmobile={123456789}\n\t\t\t\t\temail=\"nancy.bot@zheng.org\"\n\t\t\t\t/>\n\t\t\t\t<ContactCard\n\t\t\t\t\tname=\"Amy\"\n\t\t\t\t\tmobile={234567890}\n\t\t\t\t\temail=\"amy.bot@zheng.org\"\n\t\t\t\t/>\n\t\t\t\t<ContactCard\n\t\t\t\t\tname=\"Rain\"\n\t\t\t\t\tmobile={345689703}\n\t\t\t\t\temail=\"rain.bot@zheng.org\"\n\t\t\t\t/>\n\t\t\t\t<ContactCard\n\t\t\t\t\tname=\"Annie\"\n\t\t\t\t\tmobile={541331311}\n\t\t\t\t\temail=\"annie.bot@zheng.org\"\n\t\t\t\t/>\n\t\t\t\t<ContactCard\n\t\t\t\t\tname=\"Sion\"\n\t\t\t\t\tmobile={100111111}\n\t\t\t\t\temail=\"sion.bot@zheng.org\"\n\t\t\t\t/>\n\t\t\t\t<ContactCard\n\t\t\t\t\tname=\"Lulu\"\n\t\t\t\t\tmobile={684611554}\n\t\t\t\t\temail=\"lulu.bot@zheng.org\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div id=\"count\">\n\t\t\t\t<Counter />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}